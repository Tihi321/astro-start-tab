---
import Menu from "./Menu.astro";
import { DateTime } from "../blocks/info/DateTime.tsx";
---

<script>
  import { get, capitalize } from "lodash-es";
  import { getRandomQuote, getRandomWord, getEnglishQuote } from "../utils/random";

  document.addEventListener("DOMContentLoaded", () => {
    const openMenu = document.getElementById("open-menu");
    const getNewQuote = document.getElementById("get-new-quote");

    document.addEventListener("keydown", function (event) {
      if (event.ctrlKey && event.code === "Comma") {
        const menuContainer = document.querySelector(".menu-container");
        if (menuContainer?.classList.contains("show")) {
          document.body.classList.remove("overflow");
          menuContainer?.classList.remove("show");
        } else {
          document.body.classList.add("overflow");
          menuContainer?.classList.add("show");
        }
      }
    });

    openMenu?.addEventListener("click", () => {
      const menuContainer = document.querySelector(".menu-container");
      document.body.classList.add("overflow");
      menuContainer?.classList.add("show");
    });

    getNewQuote?.addEventListener("click", () => {
      getEnglishQuote().then((quote) => {
        let quoteElement = document.getElementById("quote");
        let authorElement = document.getElementById("author");

        if (quoteElement) {
          quoteElement.textContent = get(quote, ["text"], "");
        }

        if (authorElement) {
          authorElement.textContent = get(quote, ["author"], "");
        }
      });
    });

    getRandomQuote().then((quote) => {
      let quoteElement = document.getElementById("quote");
      let authorElement = document.getElementById("author");

      if (quoteElement) {
        quoteElement.textContent = get(quote, ["text"], "");
      }

      if (authorElement) {
        authorElement.textContent = get(quote, ["author"], "");
      }
    });

    getRandomWord().then((word) => {
      const title = `${capitalize(get(word, ["name"], ""))} - ${get(word, ["meaning"], "")}`;
      document.getElementById("wow")?.setAttribute("title", title);

      let wordElement = document.getElementById("wow-word");
      if (wordElement) {
        wordElement.textContent = get(word, ["name"], "");
      }
    });
  });
</script>

<Menu />
<header>
  <div class="menu">
    <div class="wow" id="wow">
      <svg
        xmlns="http://www.w3.org/2000/svg"
        viewBox="0 0 24 24"
        fill="none"
        stroke="currentColor"
        stroke-width="3"
        stroke-linecap="round"
        stroke-linejoin="round"
      >
        <circle cx="12" cy="12" r="10"></circle>
        <line x1="12" y1="16" x2="12" y2="12"></line>
        <line x1="12" y1="8" x2="12" y2="8"></line>
      </svg>
      <div id="wow-word"></div>
    </div>
    <button class="open-menu" id="open-menu"
      ><svg
        class="cog-icon svelte-eyvwnt"
        width="38"
        height="38"
        viewBox="0 0 38 38"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
        ><path
          class="cog-icon-path svelte-eyvwnt"
          fill-rule="evenodd"
          clip-rule="evenodd"
          d="M16 0a1 1 0 0 0-1 1v5.458a13.4 13.4 0 0 0-2.12.764L9.1 3.444a1 1 0 0 0-1.414 0L3.444 7.686a1 1 0 0 0 0 1.415l3.468 3.468A13.439 13.439 0 0 0 5.768 15H1a1 1 0 0 0-1 1v6a1 1 0 0 0 1 1h4.458c.262.979.631 1.913 1.094 2.79L3.444 28.9a1 1 0 0 0 0 1.414l4.242 4.242a1 1 0 0 0 1.415 0l3.108-3.108c.878.463 1.812.832 2.791 1.094V37a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1v-4.768a13.436 13.436 0 0 0 2.43-1.145l3.47 3.47a1 1 0 0 0 1.414 0l4.242-4.243a1 1 0 0 0 0-1.415l-3.778-3.778c.311-.679.568-1.387.764-2.121H37a1 1 0 0 0 1-1v-6a1 1 0 0 0-1-1h-5.768a13.41 13.41 0 0 0-.784-1.79l4.108-4.11a1 1 0 0 0 0-1.414l-4.242-4.242a1 1 0 0 0-1.415 0l-4.108 4.108A13.427 13.427 0 0 0 23 6.768V1a1 1 0 0 0-1-1h-6Zm3 28a9 9 0 1 0 0-18 9 9 0 0 0 0 18Z"
          fill="#fff"></path></svg
      ></button
    >
  </div>
  <div class="quote-of-the-day">
    <div class="quote" id="quote"></div>
    <div class="author" id="author"></div>
    <button class="get-new-quote" id="get-new-quote" title="Get new quote"> </button>
  </div>
  <div class="info">
    <div class="weather">
      <iframe
        src="https://www.meteoblue.com/en/weather/widget/three/osijek_croatia_3193935?geoloc=fixed&nocurrent=0&noforecast=0&noforecast=1&days=4&tempunit=CELSIUS&windunit=KILOMETER_PER_HOUR&layout=dark"
        allowtransparency="true"
        sandbox="allow-same-origin allow-scripts allow-popups allow-popups-to-escape-sandbox"
      ></iframe><div>
        <!-- DO NOT REMOVE THIS LINK -->
        <a
          href="https://www.meteoblue.com/en/weather/week/osijek_croatia_3193935?utm_source=weather_widget&utm_medium=linkus&utm_content=three&utm_campaign=Weather%2BWidget"
          target="_blank"
          rel="noopener">meteoblue</a
        >
      </div>
    </div>
    <div class="date">
      <DateTime client:only />
    </div>
  </div>
</header>

<style>
  header {
    position: relative;
    width: 100%;
    height: 120px;
    display: flex;
    flex-direction: row;
    justify-content: space-between;
    padding: 8px;
  }

  .menu {
    display: flex;
    flex-direction: column;
    flex-wrap: wrap;
    gap: 8px;
    margin-top: 10px;

    .open-menu {
      background: none;
      border: none;
      cursor: pointer;
      margin: 0;
      padding: 0;
      width: 30px;

      svg {
        width: 100%;
        height: auto;
      }
    }

    .wow {
      display: flex;
      gap: 4px;
      text-transform: capitalize;
      cursor: pointer;
      font-size: 16px;
      line-height: 1;
      svg {
        width: 14px;
        height: 14px;
      }
    }
  }

  .quote-of-the-day {
    position: absolute;
    top: 16px;
    left: 50%;
    transform: translateX(-50%);
    display: flex;
    flex-direction: column;
    gap: 4px;
    width: 300px;
    height: 120px;
    font-size: 14px;
    background: var(--dark);
    padding: 8px;
    border-radius: 8px;
    align-items: center;
    justify-content: center;

    .quote {
      &::before {
        content: "“";
      }
      &::after {
        content: "”";
      }
    }

    .author {
      font-weight: bold;
    }

    .get-new-quote {
      position: absolute;
      right: 10px;
      bottom: 10px;
      width: 15px;
      height: 15px;
      background: none;
      border: 2px solid var(--light);
      cursor: pointer;
      border-radius: 50%;
      overflow: hidden;

      &::before {
        content: "";
        position: absolute;
        top: 50%;
        left: 50%;
        width: 0;
        height: 0;
        background-color: var(--light);
        border-radius: 50%;
        transform: translate(-50%, -50%);
        transition:
          width 0.2s ease,
          height 0.2s ease;
      }

      &:hover::before {
        width: 80%;
        height: 80%;
      }
    }
  }

  .info {
    position: relative;
    display: flex;
    flex-direction: column;
    align-items: center;
    width: 270px;
    height: 90px;

    .weather {
      position: absolute;
      width: 470px;
      height: 140px;
      transform: scale(0.5) translate(20px, -50px);
      overflow: hidden;

      iframe {
        width: 100%;
        height: 220px;
        border: none;
      }

      a {
        display: none;
      }
    }

    .date {
      position: absolute;
      width: 160px;
      bottom: -30px;
      left: 50%;
      transform: translateX(-40%);
    }
  }
</style>
